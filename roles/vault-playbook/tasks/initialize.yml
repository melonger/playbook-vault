- debug: msg="Initialized - {{ vault_unsealed.stat.exists }}"

- name: Operator Init
  shell: |
    # . /etc/profile.d/99-consul-env.sh
    . /etc/profile.d/99-vault-env.sh
    vault operator init -recovery-shares={{ vault_recovery_shares }} -recovery-threshold={{ vault_recovery_threshold }}
  register: operator_init
  when: not vault_unsealed.stat.exists
  run_once: yes

- debug: msg="{{ operator_init }}"
  when: not vault_unsealed.stat.exists

- name: Set Operator Output
  set_fact: operator_init_output="{{ operator_init.stdout_lines }}"
  when: not vault_unsealed.stat.exists

- name: Write Unseal Temp File
  copy:
    content: "{{ operator_init_output }}"
    dest: "{{ tempdir }}/vault.txt"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0440
  when: not vault_unsealed.stat.exists

- name: Set Operator Output
  set_fact: operator_init_output="{{ lookup('file', vault_unsealed.stat.path).splitlines() }}"
  when: vault_unsealed.stat.exists == true

- name: Init unseal_lines
  set_fact: unseal_lines="{{ [] }}"
  # when: not unseal_keys_temp_file.stat.exists

# - name: Truncate unseal_file_lines
#   set_fact:
#     unseal_lines: "{{ unseal_lines + [item] }}"
#   loop: "{{ operator_init_output }}"
#   loop_control:
#     extended: yes
#   when:
#     - ansible_loop.index <= vault_recovery_shares
    # - not unseal_keys_temp_file.stat.exists

- name: Init unseal_keys
  set_fact: unseal_keys="{{ [] }}"
  # when: not unseal_keys_temp_file.stat.exists

- name: Extract Unseal Keys
  set_fact: unseal_keys="{{ unseal_keys + [item | regex_replace('^Recovery Key .. (.*)$', '\\1')] }}"
  with_items: "{{ unseal_lines }}"
  # when: not unseal_keys_temp_file.stat.exists

- debug: msg="{{ unseal_keys }}"
  # when: not unseal_keys_temp_file.stat.exists

- name: Join unseal_keys
  set_fact: unseal_keys="{{ unseal_keys | join('\n') }}"
  when: not unseal_keys_temp_file.stat.exists

- name: Set Keys Output
  set_fact: unseal_keys_output="{{ unseal_keys }}"
  when: not unseal_keys_temp_file.stat.exists

- name: Set Keys Output
  set_fact: unseal_keys_output="{{ lookup('file', unseal_keys_temp_file.stat.path) }}"
  when: unseal_keys_temp_file.stat.exists == true

- debug: msg="{{ unseal_keys_output }}"
  when: not unseal_keys_temp_file.stat.exists

- name: Write Unseal Keys Temp File
  copy:
    content: "{{ unseal_keys_output }}"
    dest: "{{ tempdir }}/vault_unseal.txt"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0440
  when: not unseal_keys_temp_file.stat.exists

- name: Write Unseal Complete
  copy:
    content: "unsealed"
    dest: "{{ vault_config_path }}/unsealed"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0440
  when: vault_unsealed.stat.exists == false

# - name: Store Shards in AWS SSM
#   import_tasks: shards_ssm.yml
#   when: vault_unsealed.stat.exists == true

- name: Set Bootstrap Success
  copy:
    content: "true"
    dest: "{{ vault_config_path }}/bootstrapped"
    owner: "{{ vault_user }}"
    group: "{{ vault_group }}"
    mode: 0640
  when:
    - bootstrap_file.stat.exists == false
