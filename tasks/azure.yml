- name: Login to Azure
  shell: |
    az login --service-principal -u {{ az_client_id }} -p {{ az_secret }} --tenant {{ az_tenant_id }}
  register: az_login

- name: Gather server INFO
  uri:
    method: GET
    url: 'http://169.254.169.254/metadata/instance/compute?api-version=2017-08-01'
    headers:
      Metadata: true
    validate_certs: no
    return_content: yes
  register: server_info

- name: Gather network INFO
  uri:
    method: GET
    url: 'http://169.254.169.254/metadata/instance/network/interface?api-version=2017-08-01'
    headers:
      Metadata: true
    validate_certs: no
    return_content: yes
  register: network_info

- name: Gather Azailability Zone INFO
  uri:
    method: GET
    url: 'http://169.254.169.254/metadata/instance/compute/zone?api-version=2019-06-04&format=text'
    headers:
      Metadata: true
    validate_certs: no
    return_content: yes
  register: availability_zone

- name: Set Availability Zone
  set_fact: availability_zone="{{ availability_zone.content }}"

- name: Set Resource Group
  set_fact: resource_group="{{ server_info.json.resourceGroupName }}"

- name: Set Location
  set_fact: location="{{ server_info.json.location }}"

- name: Set Name
  set_fact: instance_id="{{ server_info.json.name }}"

- name: Set Ip Address
  set_fact: local_ip_address="{{ network_info.json[0].ipv4.ipAddress[0].privateIpAddress }}"

- name: Fetch Vault License File from parameter store
  shell: "az keyvault secret download --vault-name {{ kms_name }} --name {{ vault_license_secret_name }} --file {{ vault_config_path }}/license.hclic"
  register: vault_license
  when:
    - stat_vault_license.stat.exists == false
    - vault_license_secret_name != "demo"

- name: Fetch Vault CA certificate bundle from parameter store
  shell: "az keyvault secret show --name vault-tls-ca-bundle --vault-name {{ kms_name }}  | jq -r '.value'"
  register: consul_tls_ca_bundle
  when:
    - stat_vault_tls_ca_bundle.stat.exists == false
    - vault_https_enabled | bool

- name: Fetch Vault server certificate from parameter store
  shell: "az keyvault secret show --name vault-server-tls-cert --vault-name {{ kms_name }}  | jq -r '.value'"
  register: consul_client_tls_cert
  when:
    - stat_vault_server_tls_cert.stat.exists == false
    - vault_https_enabled | bool

- name: Fetch Vault server certificate key from parameter store
  shell: "az keyvault secret show --name vault-server-tls-key --vault-name {{ kms_name }}  | jq -r '.value'"
  register: consul_client_tls_key
  when:
    - stat_vault_server_tls_key.stat.exists == false
    - vault_https_enabled | bool

- name: Write Tokens to File System
  import_tasks: write-token.yml

- name: Copying Certificates
  import_tasks: write-certs.yml
  when: vault_https_enabled | bool

- name: Logout of Azure
  shell: |
    az logout
  register: az_logout
